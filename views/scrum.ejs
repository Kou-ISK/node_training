<!DOCTYPE html>
<html>

    <head>
        <meta charset="UTF-8">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
            integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
        <title>スクラム描画
        </title>
        <script type="text/javascript">
            function draw() {
                //描画コンテキストの取得
                var canvas = document.getElementById('sample');
                if (canvas.getContext) {
                    console.log('描画開始');
                    var context = canvas.getContext('2d');
                    context.clearRect(0, 0, canvas.width, canvas.height);
                    var toeX = 250;
                    var toeY = 245;
                    var doutaiLength = Number(document.getElementById('bodyHeight').value) * 0.55 * 2 / 3;
                    var headRadius = Number(document.getElementById('bodyHeight').value) * 0.55 * 1 / 8;
                    var neckLength = Number(document.getElementById('bodyHeight').value) * 0.55 * 1 / 12;
                    var hizaUeLength = Number(document.getElementById('bodyHeight').value) * 0.45 * 3 / 8;
                    var hizaShitaLength = Number(document.getElementById('bodyHeight').value) * 0.45 * 5 / 8;
                    var footLength = 24;
                    //地面と足の角度
                    var footAngle = Number(document.getElementById('footAngle').value);
                    //足首の角度
                    var ankleAngle = Number(document.getElementById('ankleAngle').value) + footAngle - 180;
                    //膝の角度
                    var kneeAngle = 180 - (Number(document.getElementById('kneeAngle').value) - ankleAngle);
                    //股関節の角度
                    var kokansetsuAngle = Number(document.getElementById('kokansetsuAngle').value) + kneeAngle - 180;
                    //首の角度
                    var neckAngle = Number(document.getElementById('neckAngle').value) + kokansetsuAngle;


                    //各点の座標
                    var ankleX = toeX - footLength * Math.cos(footAngle * (Math.PI / 180));
                    var ankleY = toeY - footLength * Math.sin(footAngle * (Math.PI / 180));
                    var kneeX = ankleX - hizaShitaLength * Math.cos(ankleAngle * (Math.PI / 180));
                    var kneeY = ankleY - hizaShitaLength * Math.sin(ankleAngle * (Math.PI / 180));
                    var kokansetsuX = kneeX - hizaUeLength * Math.cos(kneeAngle * (Math.PI / 180));
                    var kokansetsuY = kneeY - hizaUeLength * Math.sin(kneeAngle * (Math.PI / 180));
                    var shoulderX = kokansetsuX - doutaiLength * Math.cos(kokansetsuAngle * (Math.PI / 180));
                    var shoulderY = kokansetsuY - doutaiLength * Math.sin(kokansetsuAngle * (Math.PI / 180));
                    var headX = shoulderX - ((neckLength + headRadius) * Math.cos(neckAngle * (Math.PI / 180)));
                    var headY = shoulderY - ((neckLength + headRadius) * Math.sin(neckAngle * (Math.PI / 180)));

                    //新しいパスを開始する
                    context.beginPath();
                    context.lineWidth = 2;
                    context.moveTo(toeX, toeY);
                    context.lineTo(ankleX, ankleY);
                    context.strokeStyle = '#FFF';
                    context.stroke();

                    context.beginPath();
                    context.lineWidth = 2;
                    context.moveTo(kneeX, kneeY);
                    context.lineTo(kokansetsuX, kokansetsuY);
                    context.stroke();

                    context.beginPath();
                    context.strokeStyle = '#FFF';
                    context.moveTo(kokansetsuX, kokansetsuY);
                    context.lineTo(shoulderX, shoulderY);
                    context.stroke();


                    context.beginPath();
                    context.lineWidth = 2;
                    context.moveTo(kneeX, kneeY);
                    context.lineTo(ankleX, ankleY);
                    context.stroke();

                    context.beginPath();
                    context.lineWidth = 2;
                    context.moveTo(shoulderX, shoulderY);
                    context.lineTo(headX, headY);

                    //パスを閉じる（最後の座標から開始座標に向けてラインを引く）
                    //context.closePath();
                    //現在のパスを輪郭表示する
                    context.stroke();
                    //　円を描く（頭の部分）
                    context.beginPath();
                    context.strokeStyle = '#FFF';//　線の色調整
                    context.lineWidth = 2;//　線の太さ調整
                    context.arc(headX, headY, headRadius, 0, Math.PI * 2, false);
                    context.stroke();

                    // 関節の描画
                    context.beginPath();
                    context.strokeStyle = '#900'
                    context.arc(shoulderX, shoulderY, 3, 0, Math.PI * 2, false);
                    context.fillStyle = '#900'
                    context.fill();
                    context.stroke();
                    context.beginPath();
                    context.strokeStyle = '#900'
                    context.arc(kokansetsuX, kokansetsuY, 3, 0, Math.PI * 2, false);
                    context.fillStyle = '#900'
                    context.fill();
                    context.stroke();
                    context.beginPath();
                    context.strokeStyle = '#900'
                    context.arc(kneeX, kneeY, 3, 0, Math.PI * 2, false);
                    context.fillStyle = '#900'
                    context.fill();
                    context.stroke();
                    context.beginPath();
                    context.strokeStyle = '#900'
                    context.arc(ankleX, ankleY, 3, 0, Math.PI * 2, false);
                    context.fillStyle = '#900'
                    context.fill();
                    context.stroke();
                    context.beginPath();
                    context.strokeStyle = '#900'
                    context.arc(toeX, toeY, 3, 0, Math.PI * 2, false);
                    context.fillStyle = '#900'
                    context.fill();
                    context.stroke();
                }
            }

        </script>
    </head>

    <body onLoad="draw()">
        <%- include('./partials/head'); %>
            <h1 class="m-3">スクラム描画</h2>
                <div class="mt-4 d-flex container-fluid">
                    <div class="mx-1 bg-light">
                        <div class="input-group my-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">身長</span>
                            </div>
                            <input type="number" id="bodyHeight" class="form-control" value="175" onChange="draw()">
                        </div>
                        <div class="input-group my-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">首の角度</span>
                            </div>
                            <input type="number" id="neckAngle" class="form-control" value="5" onChange="draw()">
                        </div>
                        <div class="input-group my-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">股関節の角度</span>
                            </div>
                            <input type="number" id="kokansetsuAngle" class="form-control" value="90" onChange="draw()">
                        </div>
                        <div class="input-group my-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">膝の角度</span>
                            </div>
                            <input type="number" id="kneeAngle" class="form-control" value="110" onChange="draw()">
                        </div>
                        <div class="input-group my-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">足首の角度</span>
                            </div>
                            <input type="number" id="ankleAngle" class="form-control" value="55" onChange="draw()">
                        </div>
                        <div class="input-group my-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">地面と足の角度</span>
                            </div>
                            <input type="number" id="footAngle" class="form-control" value="145" onChange="draw()">
                        </div>
                    </div>

                    <div class="ml-5">
                        <p class="text-center">描画エリア</p>
                        <canvas width="300" height="250" id="sample" style="background-color:rgb(26, 29, 38)">
                            図形を表示するには、canvasタグをサポートしたブラウザが必要です。
                        </canvas>
                    </div>
                </div>
    </body>

</html>